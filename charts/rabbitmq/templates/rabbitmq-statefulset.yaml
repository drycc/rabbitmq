{{- if eq .Values.global.rabbitmq_location "on-cluster" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: drycc-rabbitmq
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.image_tag }}
spec:
  serviceName: drycc-rabbitmq-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: drycc-rabbitmq
  template:
    metadata:
      labels:
        app: drycc-rabbitmq
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      containers:
        - name: drycc-rabbitmq
          image: {{.Values.image_registry}}{{.Values.org}}/rabbitmq:{{.Values.image_tag}}
          imagePullPolicy: {{ .Values.image_pull_policy | quote }}
          env:
            - name: RABBITMQ_LOGS
              value: {{ .Values.logs | quote }}
            - name: RABBITMQ_ULIMIT_NOFILES
              value: '65536'
            {{- if and .Values.maxAvailableSchedulers }}
            - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
              value: {{ printf "+S %s:%s" (toString .Values.maxAvailableSchedulers) (toString .Values.onlineSchedulers) -}}
            {{- end }}
            - name: RABBITMQ_PLUGINS
              value: {{ include "rabbitmq.plugins" . | quote }}
            {{- if .Values.communityPlugins }}
            - name: RABBITMQ_COMMUNITY_PLUGINS
              value: {{ .Values.communityPlugins | quote }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ tpl .Values.extraEnvVarsCM . | quote }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ tpl .Values.extraEnvVarsSecret . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: amqp
              containerPort: 5672
            - name: dist
              containerPort: 25672
            - name: stats
              containerPort: 15672
            - name: epmd
              containerPort: 4369
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          lifecycle:
          {{- if and .Values.clustering.rebalance (gt (.Values.replicaCount | int) 1) }}
            postStart:
              exec:
                command:
                  - /bin/bash
                  - -ec
                  - |
                    until rabbitmqctl cluster_status >/dev/null; do
                        echo "Waiting for cluster readiness..."
                        sleep 5
                    done
                    rabbitmq-queues rebalance "all"
          {{- end }}
            preStop:
              exec:
                command:
                  - bash
                  - -ec
                  - rabbitmqctl stop_app
          volumeMounts:
            - name: configuration
              mountPath: /etc/rabbitmq
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
      volumes:
        - name: configuration
          configMap:
            name: drycc-rabitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              {{- if .Values.advancedConfiguration}}
              - key: advanced.config
                path: advanced.config
              {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: drycc-rabbitmq
        {{- else }}
        - name: rabbitmq-data
          emptyDir: {}
        {{- end }}
{{- end }}
